sqlplus id224100xxxx/id224100xxxx@//xxx.xx.xx.xx/ora11g
-- Create BRANCH table first (no dependencies)
CREATE TABLE BRANCH (
    BRANCH_CODE VARCHAR2(4) PRIMARY KEY,
    BRANCH_NAME VARCHAR2(50) NOT NULL,
    BRANCH_CITY VARCHAR2(20),
    CONSTRAINT chk_branch_city CHECK (BRANCH_CITY IN ('DELHI', 'MUMBAI', 'KOLKATA', 'CHENNAI'))
);

-- Create CUSTOMER table (no dependencies)
CREATE TABLE CUSTOMER (
    CUST_NO VARCHAR2(5) PRIMARY KEY,
    NAME VARCHAR2(50) NOT NULL,
    PHONE_NO VARCHAR2(10),
    CITY VARCHAR2(20) NOT NULL,
    CONSTRAINT chk_cust_no CHECK (LENGTH(CUST_NO) = 5 AND CUST_NO LIKE 'C%')
);

-- Create ACCOUNT table (references BRANCH)
CREATE TABLE ACCOUNT (
    ACCOUNT_NO VARCHAR2(5) PRIMARY KEY,
    TYPE VARCHAR2(2),
    BALANCE NUMBER(10, 2),
    BRANCH_CODE VARCHAR2(4),
    CONSTRAINT chk_account_no CHECK (LENGTH(ACCOUNT_NO) = 5 AND ACCOUNT_NO LIKE 'A%'),
    CONSTRAINT chk_type CHECK (TYPE IN ('SB', 'FD', 'CA')),
    CONSTRAINT chk_balance CHECK (BALANCE < 10000000),
    CONSTRAINT fk_account_branch FOREIGN KEY (BRANCH_CODE) REFERENCES BRANCH(BRANCH_CODE)
);

-- Create DEPOSITOR table (references CUSTOMER and ACCOUNT)
CREATE TABLE DEPOSITOR (
    CUST_NO VARCHAR2(5),
    ACCOUNT_NO VARCHAR2(5),
    CONSTRAINT pk_depositor PRIMARY KEY (CUST_NO, ACCOUNT_NO),
    CONSTRAINT fk_depositor_cust FOREIGN KEY (CUST_NO) REFERENCES CUSTOMER(CUST_NO),
    CONSTRAINT fk_depositor_account FOREIGN KEY (ACCOUNT_NO) REFERENCES ACCOUNT(ACCOUNT_NO)
);

-- Create LOAN table (references CUSTOMER and BRANCH)
CREATE TABLE LOAN (
    LOAN_NO VARCHAR2(5) PRIMARY KEY,
    CUST_NO VARCHAR2(5),
    AMOUNT NUMBER(10, 2),
    BRANCH_CODE VARCHAR2(4),
    CONSTRAINT chk_loan_no CHECK (LENGTH(LOAN_NO) = 5 AND LOAN_NO LIKE 'L%'),
    CONSTRAINT chk_amount CHECK (AMOUNT > 1000),
    CONSTRAINT fk_loan_cust FOREIGN KEY (CUST_NO) REFERENCES CUSTOMER(CUST_NO),
    CONSTRAINT fk_loan_branch FOREIGN KEY (BRANCH_CODE) REFERENCES BRANCH(BRANCH_CODE)
);

-- Create INSTALLMENT table (references LOAN)
CREATE TABLE INSTALLMENT (
    INST_NO NUMBER(2),
    LOAN_NO VARCHAR2(5),
    INST_AMOUNT NUMBER(10, 2) NOT NULL,
    CONSTRAINT pk_installment PRIMARY KEY (INST_NO, LOAN_NO),
    CONSTRAINT chk_inst_no CHECK (INST_NO <= 10),
    CONSTRAINT fk_installment_loan FOREIGN KEY (LOAN_NO) REFERENCES LOAN(LOAN_NO)
);

-- Insert records into BRANCH
INSERT INTO BRANCH VALUES ('B001', 'JANAKPURI BRANCH', 'DELHI');
INSERT INTO BRANCH VALUES ('B002', 'CHANDNICHOWK BRANCH', 'DELHI');
INSERT INTO BRANCH VALUES ('B003', 'JUHU BRANCH', 'MUMBAI');
INSERT INTO BRANCH VALUES ('B004', 'ANDHERI BRANCH', 'MUMBAI');
INSERT INTO BRANCH VALUES ('B005', 'SALTLAKE BRANCH', 'KOLKATA');
INSERT INTO BRANCH VALUES ('B006', 'SRIRAMPURAM BRANCH', 'CHENNAI');

-- Insert records into CUSTOMER
INSERT INTO CUSTOMER VALUES ('C0001', 'RAJ ANAND SINGH', '9861258466', 'DELHI');
INSERT INTO CUSTOMER VALUES ('C0002', 'ANKITA SINGH', '9879958651', 'BANGALORE');
INSERT INTO CUSTOMER VALUES ('C0003', 'SOUMYA JHA', '9885623344', 'MUMBAI');
INSERT INTO CUSTOMER VALUES ('C0004', 'ABHIJIT MISHRA', '9455845425', 'MUMBAI');
INSERT INTO CUSTOMER VALUES ('C0005', 'YASH SARAF', '9665854585', 'KOLKATA');
INSERT INTO CUSTOMER VALUES ('C0006', 'SWAROOP RAY', '9437855466', 'CHENNAI');
INSERT INTO CUSTOMER VALUES ('C0007', 'SURYA NARAYAN', '9937955212', 'GURGAON');
INSERT INTO CUSTOMER VALUES ('C0008', 'PRANAV PRAVEEN', '9336652441', 'PUNE');
INSERT INTO CUSTOMER VALUES ('C0009', 'STUTI MISRA', '7870266534', 'DELHI');
INSERT INTO CUSTOMER VALUES ('C0010', 'ASLESHA TIWARI', NULL, 'MUMBAI');

-- Insert records into ACCOUNT
INSERT INTO ACCOUNT VALUES ('A0001', 'SB', 200000, 'B003');
INSERT INTO ACCOUNT VALUES ('A0002', 'SB', 15000, 'B002');
INSERT INTO ACCOUNT VALUES ('A0003', 'CA', 850000, 'B004');
INSERT INTO ACCOUNT VALUES ('A0004', 'CA', 35000, 'B004');
INSERT INTO ACCOUNT VALUES ('A0005', 'FD', 28500, 'B005');
INSERT INTO ACCOUNT VALUES ('A0006', 'FD', 550000, 'B005');
INSERT INTO ACCOUNT VALUES ('A0007', 'SB', 48000, 'B001');
INSERT INTO ACCOUNT VALUES ('A0008', 'SB', 7200, 'B002');
INSERT INTO ACCOUNT VALUES ('A0009', 'SB', 18750, 'B003');
INSERT INTO ACCOUNT VALUES ('A0010', 'FD', 99000, 'B004');

-- Insert records into DEPOSITOR
INSERT INTO DEPOSITOR VALUES ('C0003', 'A0001');
INSERT INTO DEPOSITOR VALUES ('C0004', 'A0001');
INSERT INTO DEPOSITOR VALUES ('C0004', 'A0002');
INSERT INTO DEPOSITOR VALUES ('C0006', 'A0003');
INSERT INTO DEPOSITOR VALUES ('C0006', 'A0004');
INSERT INTO DEPOSITOR VALUES ('C0001', 'A0005');
INSERT INTO DEPOSITOR VALUES ('C0002', 'A0005');
INSERT INTO DEPOSITOR VALUES ('C0010', 'A0006');
INSERT INTO DEPOSITOR VALUES ('C0009', 'A0007');
INSERT INTO DEPOSITOR VALUES ('C0008', 'A0008');
INSERT INTO DEPOSITOR VALUES ('C0007', 'A0009');
INSERT INTO DEPOSITOR VALUES ('C0006', 'A0010');

-- Insert records into LOAN
INSERT INTO LOAN VALUES ('L0001', 'C0005', 3000000, 'B006');
INSERT INTO LOAN VALUES ('L0002', 'C0001', 50000, 'B005');
INSERT INTO LOAN VALUES ('L0003', 'C0002', 8000000, 'B004');
INSERT INTO LOAN VALUES ('L0004', 'C0010', 100000, 'B004');
INSERT INTO LOAN VALUES ('L0005', 'C0009', 9500000, 'B005');
INSERT INTO LOAN VALUES ('L0006', 'C0008', 25000, 'B006');

-- Insert records into INSTALLMENT
INSERT INTO INSTALLMENT VALUES (1, 'L0005', 500000);
INSERT INTO INSTALLMENT VALUES (1, 'L0002', 10000);
INSERT INTO INSTALLMENT VALUES (1, 'L0003', 50000);
INSERT INTO INSTALLMENT VALUES (1, 'L0004', 20000);
INSERT INTO INSTALLMENT VALUES (2, 'L0005', 500000);
INSERT INTO INSTALLMENT VALUES (1, 'L0006', 3000);
INSERT INTO INSTALLMENT VALUES (2, 'L0002', 10000);
INSERT INTO INSTALLMENT VALUES (3, 'L0002', 10000);
INSERT INTO INSTALLMENT VALUES (2, 'L0003', 50000);
INSERT INTO INSTALLMENT VALUES (2, 'L0004', 20000);


--insert all works

INSERT ALL
    INTO Course VALUES ('BIO-101', 'Intro. to Biology', 'Biology', 4)
    INTO Course VALUES ('BIO-301', 'Genetics', 'Biology', 4)
    INTO Course VALUES ('BIO-399', 'Computational Biology', 'Biology', 3)
    INTO Course VALUES ('CS-101', 'Intro. to Computer Science', 'Comp. Sci.', 4)
    INTO Course VALUES ('CS-190', 'Game Design', 'Comp. Sci.', 4)
    INTO Course VALUES ('CS-315', 'Robotics', 'Comp. Sci.', 3)
    INTO Course VALUES ('CS-319', 'Image Processing', 'Comp. Sci.', 3)
    INTO Course VALUES ('CS-347', 'Database System Concepts', 'Comp. Sci.', 3)
    INTO Course VALUES ('EE-181', 'Intro. to Digital Systems', 'Elec. Eng.', 3)
    INTO Course VALUES ('FIN-201', 'Investment Banking', 'Finance', 3)
    INTO Course VALUES ('HIS-351', 'World History', 'History', 3)
    INTO Course VALUES ('MU-199', 'Music Video Production', 'Music', 3)
    INTO Course VALUES ('PHY-101', 'Physical Principles', 'Physics', 4)
SELECT * FROM DUAL;

--THIS ALSO
INSERT INTO CUSTOMER VALUES
	('C0022', 'HEY', '1234567899', 'DELHI'),
	('C0042', 'WOW', '9876543211', 'BANGALORE');


------create another table 

-- Create BRANCH table
CREATE TABLE BRANCH (
    BRANCH_CODE VARCHAR2(4) PRIMARY KEY,
    BRANCH_NAME VARCHAR2(50) NOT NULL,
    BRANCH_CITY VARCHAR2(20) CHECK (BRANCH_CITY IN ('DELHI', 'MUMBAI', 'KOLKATA', 'CHENNAI'))
);

-- Create CUSTOMER table
CREATE TABLE CUSTOMER (
    CUST_NO VARCHAR2(5) PRIMARY KEY CHECK (LENGTH(CUST_NO) = 5 AND CUST_NO LIKE 'C%'),
    NAME VARCHAR2(50) NOT NULL,
    PHONE_NO VARCHAR2(10),
    CITY VARCHAR2(20) NOT NULL
);

-- Create ACCOUNT table
CREATE TABLE ACCOUNT (
    ACCOUNT_NO VARCHAR2(5) PRIMARY KEY CHECK (LENGTH(ACCOUNT_NO) = 5 AND ACCOUNT_NO LIKE 'A%'),
    TYPE VARCHAR2(2) CHECK (TYPE IN ('SB', 'FD', 'CA')),
    BALANCE NUMBER(10, 2) CHECK (BALANCE < 10000000),
    BRANCH_CODE VARCHAR2(4) REFERENCES BRANCH(BRANCH_CODE)
);

-- Create DEPOSITOR table
CREATE TABLE DEPOSITOR (
    CUST_NO VARCHAR2(5) REFERENCES CUSTOMER(CUST_NO),
    ACCOUNT_NO VARCHAR2(5) REFERENCES ACCOUNT(ACCOUNT_NO),
    PRIMARY KEY (CUST_NO, ACCOUNT_NO)
);

-- Create LOAN table
CREATE TABLE LOAN (
    LOAN_NO VARCHAR2(5) PRIMARY KEY CHECK (LENGTH(LOAN_NO) = 5 AND LOAN_NO LIKE 'L%'),
    CUST_NO VARCHAR2(5) REFERENCES CUSTOMER(CUST_NO),
    AMOUNT NUMBER(10, 2) CHECK (AMOUNT > 1000),
    BRANCH_CODE VARCHAR2(4) REFERENCES BRANCH(BRANCH_CODE)
);

-- Create INSTALLMENT table
CREATE TABLE INSTALLMENT (
    INST_NO NUMBER(2) CHECK (INST_NO <= 10),
    LOAN_NO VARCHAR2(5) REFERENCES LOAN(LOAN_NO),
    INST_AMOUNT NUMBER(10, 2) NOT NULL,
    PRIMARY KEY (INST_NO, LOAN_NO)
);

--another way

DROP TABLE INSTALLMENT CASCADE CONSTRAINTS;
DROP TABLE LOAN CASCADE CONSTRAINTS;
DROP TABLE DEPOSITOR CASCADE CONSTRAINTS;
DROP TABLE ACCOUNT CASCADE CONSTRAINTS;
DROP TABLE CUSTOMER CASCADE CONSTRAINTS;
DROP TABLE BRANCH CASCADE CONSTRAINTS;

-- Create BRANCH table
CREATE TABLE BRANCH (
    BRANCH_CODE VARCHAR2(5) PRIMARY KEY,
    BRANCH_NAME VARCHAR2(50) NOT NULL,
    BRANCH_CITY VARCHAR2(20) CHECK (BRANCH_CITY IN ('DELHI', 'MUMBAI', 'KOLKATA', 'CHENNAI'))
);

-- Create CUSTOMER table
CREATE TABLE CUSTOMER (
    CUST_NO VARCHAR2(5) PRIMARY KEY CHECK (REGEXP_LIKE(CUST_NO, '^C.{4}$')),
    NAME VARCHAR2(50) NOT NULL,
    PHONE_NO VARCHAR2(15),
    CITY VARCHAR2(30) NOT NULL
);

-- Create ACCOUNT table
CREATE TABLE ACCOUNT (
    ACCOUNT_NO VARCHAR2(5) PRIMARY KEY CHECK (REGEXP_LIKE(ACCOUNT_NO, '^A.{4}$')),
    TYPE VARCHAR2(2) CHECK (TYPE IN ('SB', 'FD', 'CA')),
    BALANCE NUMBER CHECK (BALANCE < 10000000),
    BRANCH_CODE VARCHAR2(5),
    FOREIGN KEY (BRANCH_CODE) REFERENCES BRANCH(BRANCH_CODE)
);

-- Create DEPOSITOR table
CREATE TABLE DEPOSITOR (
    CUST_NO VARCHAR2(5),
    ACCOUNT_NO VARCHAR2(5),
    PRIMARY KEY (CUST_NO, ACCOUNT_NO),
    FOREIGN KEY (CUST_NO) REFERENCES CUSTOMER(CUST_NO),
    FOREIGN KEY (ACCOUNT_NO) REFERENCES ACCOUNT(ACCOUNT_NO)
);

-- Create LOAN table
CREATE TABLE LOAN (
    LOAN_NO VARCHAR2(5) PRIMARY KEY CHECK (REGEXP_LIKE(LOAN_NO, '^L.{4}$')),
    CUST_NO VARCHAR2(5),
    AMOUNT NUMBER CHECK (AMOUNT > 1000),
    BRANCH_CODE VARCHAR2(5),
    FOREIGN KEY (CUST_NO) REFERENCES CUSTOMER(CUST_NO),
    FOREIGN KEY (BRANCH_CODE) REFERENCES BRANCH(BRANCH_CODE)
);

-- Create INSTALLMENT table
CREATE TABLE INSTALLMENT (
    INST_NO NUMBER CHECK (INST_NO <= 10),
    LOAN_NO VARCHAR2(5),
    INST_AMOUNT NUMBER NOT NULL,
    PRIMARY KEY (INST_NO, LOAN_NO),
    FOREIGN KEY (LOAN_NO) REFERENCES LOAN(LOAN_NO)
);
